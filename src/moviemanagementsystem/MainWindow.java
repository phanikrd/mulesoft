 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package moviemanagementsystem;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Majey
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.setTitle("Insert Word!");
        
        SQLiteConnection.connect();
        selectAllWord("SELECT word, type, defn FROM words");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listWords = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        searchWordTxt = new javax.swing.JTextField();
        searchWordBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        statusTxt = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });

        listWords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Movie Name", "Year of release", "Actor, Actress, Director."
            }
        ));
        listWords.setAlignmentX(5.0F);
        listWords.setAlignmentY(5.0F);
        listWords.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listWordsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                listWordsMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(listWords);

        searchWordTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchWordTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchWordTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchWordTxtKeyTyped(evt);
            }
        });

        searchWordBtn.setText("Search");

        jButton1.setText("Add Word");
        jButton1.setActionCommand("addWordBtn");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(searchWordTxt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchWordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchWordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchWordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel5.setText("Satus | ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 1018, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(statusTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchWordTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchWordTxtKeyTyped
        // TODO add your handling code here:
        // selectAllWord("SELECT word, type, defn FROM words WHERE word='"+searchWordTxt.getText()+"'");
    }//GEN-LAST:event_searchWordTxtKeyTyped

    private void searchWordTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchWordTxtKeyReleased
        // TODO add your handling code here:
        if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE) {
            if(searchWordTxt.getText().isEmpty()){
                selectAllWord("SELECT word, type, defn FROM words");
            }else{
                selectSearchedData("SELECT word, type, defn FROM words WHERE word LIKE '%"+searchWordTxt.getText()+"%'");
            }
        }else{
            selectSearchedData("SELECT word, type, defn FROM words WHERE word LIKE '%"+searchWordTxt.getText()+"%'");
        }
    }//GEN-LAST:event_searchWordTxtKeyReleased

    private void searchWordTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchWordTxtKeyPressed
        // TODO add your handling code here:
        // selectAllWord("SELECT word, type, defn FROM words WHERE word='"+searchWordTxt.getText()+"'");
    }//GEN-LAST:event_searchWordTxtKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        InserWord insertWord = new InserWord();
        insertWord.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void listWordsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listWordsMouseClicked
        // TODO add your handling code here:
        int getTableRow = listWords.getSelectedRow();
        String selectedWordStr = listWords.getValueAt(getTableRow, 0).toString();
        String selectedWordTypeStr = listWords.getValueAt(getTableRow, 1).toString();
        String selectedWordDefinitionStr = listWords.getValueAt(getTableRow, 2).toString();
        
        JOptionPane.showMessageDialog(this, "Word: " + selectedWordStr+
                "\nWord Type: " + selectedWordTypeStr+
                "\nWord Definition: " + selectedWordDefinitionStr);
    }//GEN-LAST:event_listWordsMouseClicked

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseEntered

    private void listWordsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listWordsMouseEntered
        // TODO add your handling code here:
        if(isRefresh){
            selectAllWord("SELECT word, type, defn FROM words");
            isRefresh = false;
        }
    }//GEN-LAST:event_listWordsMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listWords;
    private javax.swing.JButton searchWordBtn;
    private javax.swing.JTextField searchWordTxt;
    private javax.swing.JLabel statusTxt;
    // End of variables declaration//GEN-END:variables
    public static boolean isRefresh = false;
    
    private void selectAllWord(String searchQuery){
        try{
            SQLiteConnection.connect();
            Connection myConn = SQLiteConnection.conn;
            try{
                String sql = searchQuery;
                Statement statement  = myConn.createStatement();
                ResultSet resultSet = statement.executeQuery(sql);
                

                DefaultTableModel tableModel = (DefaultTableModel)listWords.getModel();
                tableModel.setRowCount(0);
                
                if(resultSet.isBeforeFirst()){
                    // loop through the result set
                    while (resultSet.next()) {
                        Object myObject[] = {resultSet.getString("word"), resultSet.getString("type"), resultSet.getString("defn")};
                        tableModel.addRow(myObject);
                        // System.out.println(resultSet.getInt("word") + "\t" + rs.getString("type"));
                    }
                }else{
                    SQLiteConnection.insertDatabaseData(1, "Bahubali", "2017", "Prabhas, Anushka, Rajamouli.");
                    JOptionPane.showMessageDialog(this, "There is no data!");
                }
            }catch (SQLException exp){
                System.out.println("Result Error: " + exp);                
            }
            // System.out.println("Connect Has Been Generated!");
        }catch (Exception ex){
            System.out.println("Connection Error: " + ex);
        }
    }
    
    private void selectSearchedData(String searchQuery){
        try{
            SQLiteConnection.connect();
            Connection myConn = SQLiteConnection.conn;
            try{
                String sql = searchQuery;
                Statement statement  = myConn.createStatement();
                ResultSet resultSet = statement.executeQuery(sql);
                

                DefaultTableModel tableModel = (DefaultTableModel)listWords.getModel();
                tableModel.setRowCount(0);
                
                if(resultSet.isBeforeFirst()){
                    // loop through the result set
                    while (resultSet.next()) {
                        Object myObject[] = {resultSet.getString("word"), resultSet.getString("type"), resultSet.getString("defn")};
                        tableModel.addRow(myObject);
                        // System.out.println(resultSet.getInt("word") + "\t" + rs.getString("type"));
                        statusTxt.setText("Record found!");
                    }
                }else{
                    statusTxt.setText("No record found for " + searchWordTxt.getText());
                }
            }catch (SQLException exp){
                System.out.println("Result Error: " + exp);                
            }
            // System.out.println("Connect Has Been Generated!");
        }catch (Exception ex){
            System.out.println("Connection Error: " + ex);
        }
    }
}
